{"version":3,"file":"static/js/714.065ff468.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts.module.css?8552","components/ContactItem/ContactItem.jsx","redux/contacts/selector.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactsForm.jsx","pages/Contacts.jsx","redux/root/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"err-title\":\"ErrorMessage_err-title__bQm71\"};","import { useSelector } from \"react-redux\"\nimport css from \"./ErrorMessage.module.css\"\nimport { selectError } from \"redux/root/selectors\"\n\nexport const ErrorMessage = () => {\n    const error = useSelector(selectError)\n    return (\n        <>\n            {error && <h2 className={css[\"err-title\"]}>{`ERROR: ${error}`}</h2>}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Dna } from 'react-loader-spinner'\nimport css from \"./Loader.module.css\"\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from 'redux/root/selectors';\n\nexport const Loader = () => {\n    const render = useSelector(selectIsLoading)\n    return (\n        <Dna\n            visible={render}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{}}\n            wrapperClass={css.loader}\n        />)\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contacts_title__HJPSk\"};","import { ListItem, ListItemText, IconButton } from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const onDel = () => dispatch(deleteContact(id))\n    return (\n        <ListItem\n            key={id}\n            secondaryAction={\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDel}>\n                    <DeleteIcon />\n                </IconButton>}\n        >\n            <ListItemText primary={`${name}: ${number}`} />\n        </ListItem>\n    )\n}\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n}","import { createSelector } from \"@reduxjs/toolkit\";\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n[ selectContacts, selectFilter],\n  (contacts, filter) => {\n   return contacts.filter(contact => contact.name.toLowerCase()\n    .includes(filter.toLowerCase()))\n }\n)","import { List } from '@mui/material';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from 'redux/contacts/selector';\n// import { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts)\n    return (\n    <>\n        {visibleContacts && \n        <List >\n            {visibleContacts.map(({id, name, number }) => {\n                return <ContactItem key={id} id={id} name={name} number={number} />\n            })}\n        </List >\n            }\n    </>\n    )\n    \n}\n\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport {FilterAlt, FilterAltOff} from '@mui/icons-material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selector';\n// import { selectFilter } from 'redux/contacts/selectors';\n\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter) || \"\";\n    const dispatch = useDispatch();\n    const handleChange = (e) => dispatch(setFilter(e.target.value))\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Typography color=\"#1976d2\" component=\"h1\" variant=\"h6\" sx={{ mb: 1 }} >\n            Find contact by name\n          </Typography>\n      <TextField\n        \n        id=\"filter\"\n        label=\"Filter\"\n        variant=\"outlined\"\n        value={filter}\n        onChange={handleChange}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">\n            {filter.length !== 0 && <FilterAlt sx={{ color: '#1976d2' }} />}\n            {filter.length === 0 && <FilterAltOff />}\n            </InputAdornment>,\n          }}\n      />\n      </Box>\n    )\n}\n","\nimport { useState } from 'react';\nimport {useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\n// import { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport 'notiflix/src/notiflix.css';\nimport {Button, TextField, Box} from '@mui/material'\nimport { selectContacts } from 'redux/contacts/selector';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const setState = {\n    name: setName,\n    number: setNumber\n  }\n  \n  const handleChange = e => {\n        const { name, value } = e.target;\n        setState[name](value);\n  }\n\n  const reset= ()=> {\n    setName(\"\")\n    setNumber(\"\")\n  }\n  \n  const findContact = name => contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!name || !number) return Notiflix.Notify.failure(`Fill in all fields`);\n    if (findContact(name)) return Notiflix.Notify.failure(`${name} is already in contacts`);\n    dispatch(\n      addContact({\n      name,\n      number\n    }));\n    reset()\n   \n   };\n\n  \n  return (\n       <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Box component=\"form\" onChange={handleChange} onSubmit={handleSubmit} >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яіїєА-ЯІЇЄ]+(([' \\-][a-zA-Zа-яіїєА-ЯІЇЄ ])?[a-zA-Zа-яіїєА-ЯІЇЄ]*)*$\"\n              value={name}\n              autoComplete=\"name\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              value={number}\n              label=\"Number\"\n              type=\"tel\"\n              id=\"number\"\n              autoComplete=\"number\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add contact\n            </Button>\n          </Box>\n        </Box>\n        )\n}","import Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport css from \"./Contacts.module.css\"\n// import { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\"\nimport { Filter } from '../components/Filter/Filter'\nimport { Loader } from \"../components/Loader/Loader\";\nimport { ErrorMessage } from \"../components/ErrorMessage/ErrorMessage\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { ContactForm } from 'components/ContactForm/ContactsForm';\n\nconst defaultTheme = createTheme();\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"sm\">\n       <CssBaseline /> \n        <h2 className={css.title}>Add contact</h2>\n        <Container component=\"section\" maxWidth=\"xs\">\n          <ContactForm />\n        </Container>\n        <h2 className={css.title}>Contacts</h2>\n      <Filter />\n      <ErrorMessage/>\n      <Loader />\n      <ContactList />\n      </Container>  \n    </ThemeProvider>\n    )\n\n}\n\nexport default Contacts","export const selectIsLoading = state => state.root.isLoading;\nexport const selectError = state => state.root.error.message || state.root.error;"],"names":["ErrorMessage","error","useSelector","selectError","_jsx","_Fragment","children","className","css","concat","Loader","render","selectIsLoading","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ContactItem","_ref","id","name","number","dispatch","useDispatch","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","DeleteIcon","ListItemText","primary","selectContacts","state","contacts","items","selectFilter","filter","selectVisibleContacts","createSelector","contact","toLowerCase","includes","ContactList","visibleContacts","List","map","Filter","_jsxs","Box","sx","display","flexDirection","Typography","color","component","variant","mb","TextField","label","value","onChange","e","setFilter","target","InputProps","startAdornment","InputAdornment","position","length","FilterAlt","FilterAltOff","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","setState","alignItems","_e$target","onSubmit","event","preventDefault","find","findContact","Notiflix","addContact","margin","required","fullWidth","pattern","autoComplete","autoFocus","type","Button","mt","defaultTheme","createTheme","useEffect","fetchContacts","ThemeProvider","theme","Container","maxWidth","CssBaseline","root","isLoading","message"],"sourceRoot":""}